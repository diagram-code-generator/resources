// Code generated by MockGen. DO NOT EDIT.
// Source: resource_factory.go
//
// Generated by this command:
//
//	mockgen -package mocks -source resource_factory.go -destination mocks/resource_factory_mock.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	resources "github.com/diagram-code-generator/resources/pkg/resources"
	gomock "go.uber.org/mock/gomock"
)

// MockResourceFactory is a mock of ResourceFactory interface.
type MockResourceFactory struct {
	ctrl     *gomock.Controller
	recorder *MockResourceFactoryMockRecorder
}

// MockResourceFactoryMockRecorder is the mock recorder for MockResourceFactory.
type MockResourceFactoryMockRecorder struct {
	mock *MockResourceFactory
}

// NewMockResourceFactory creates a new mock instance.
func NewMockResourceFactory(ctrl *gomock.Controller) *MockResourceFactory {
	mock := &MockResourceFactory{ctrl: ctrl}
	mock.recorder = &MockResourceFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceFactory) EXPECT() *MockResourceFactoryMockRecorder {
	return m.recorder
}

// CreateResource mocks base method.
func (m *MockResourceFactory) CreateResource(id, value, style string) resources.Resource {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateResource", id, value, style)
	ret0, _ := ret[0].(resources.Resource)
	return ret0
}

// CreateResource indicates an expected call of CreateResource.
func (mr *MockResourceFactoryMockRecorder) CreateResource(id, value, style any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateResource", reflect.TypeOf((*MockResourceFactory)(nil).CreateResource), id, value, style)
}
